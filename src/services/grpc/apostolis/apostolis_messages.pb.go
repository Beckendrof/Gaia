// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.21.12
// source: src/models/protos/apostolis/apostolis_messages.proto

package apostolis

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Stats int32

const (
	Stats_All     Stats = 0
	Stats_Memory  Stats = 1
	Stats_CPU     Stats = 2
	Stats_GPU     Stats = 3
	Stats_Disk    Stats = 4
	Stats_LoadAvg Stats = 5
	Stats_Net     Stats = 6
)

// Enum value maps for Stats.
var (
	Stats_name = map[int32]string{
		0: "All",
		1: "Memory",
		2: "CPU",
		3: "GPU",
		4: "Disk",
		5: "LoadAvg",
		6: "Net",
	}
	Stats_value = map[string]int32{
		"All":     0,
		"Memory":  1,
		"CPU":     2,
		"GPU":     3,
		"Disk":    4,
		"LoadAvg": 5,
		"Net":     6,
	}
)

func (x Stats) Enum() *Stats {
	p := new(Stats)
	*p = x
	return p
}

func (x Stats) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Stats) Descriptor() protoreflect.EnumDescriptor {
	return file_src_models_protos_apostolis_apostolis_messages_proto_enumTypes[0].Descriptor()
}

func (Stats) Type() protoreflect.EnumType {
	return &file_src_models_protos_apostolis_apostolis_messages_proto_enumTypes[0]
}

func (x Stats) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Stats.Descriptor instead.
func (Stats) EnumDescriptor() ([]byte, []int) {
	return file_src_models_protos_apostolis_apostolis_messages_proto_rawDescGZIP(), []int{0}
}

type ApostolisRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metric Stats `protobuf:"varint,1,opt,name=metric,proto3,enum=gaia.apostolis.api.Stats" json:"metric,omitempty"`
}

func (x *ApostolisRequest) Reset() {
	*x = ApostolisRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_models_protos_apostolis_apostolis_messages_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApostolisRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApostolisRequest) ProtoMessage() {}

func (x *ApostolisRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_models_protos_apostolis_apostolis_messages_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApostolisRequest.ProtoReflect.Descriptor instead.
func (*ApostolisRequest) Descriptor() ([]byte, []int) {
	return file_src_models_protos_apostolis_apostolis_messages_proto_rawDescGZIP(), []int{0}
}

func (x *ApostolisRequest) GetMetric() Stats {
	if x != nil {
		return x.Metric
	}
	return Stats_All
}

type ApostolisReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`  //exitcode
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"` //successful or unsuccessful
	// Types that are assignable to Data:
	//
	//	*ApostolisReply_MemoryUsage
	//	*ApostolisReply_CpuUsage
	//	*ApostolisReply_GpuUsage
	//	*ApostolisReply_DiskUsage
	//	*ApostolisReply_LoadUsage
	//	*ApostolisReply_NetUsage
	//	*ApostolisReply_All
	Data isApostolisReply_Data `protobuf_oneof:"data"`
}

func (x *ApostolisReply) Reset() {
	*x = ApostolisReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_models_protos_apostolis_apostolis_messages_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApostolisReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApostolisReply) ProtoMessage() {}

func (x *ApostolisReply) ProtoReflect() protoreflect.Message {
	mi := &file_src_models_protos_apostolis_apostolis_messages_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApostolisReply.ProtoReflect.Descriptor instead.
func (*ApostolisReply) Descriptor() ([]byte, []int) {
	return file_src_models_protos_apostolis_apostolis_messages_proto_rawDescGZIP(), []int{1}
}

func (x *ApostolisReply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ApostolisReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (m *ApostolisReply) GetData() isApostolisReply_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *ApostolisReply) GetMemoryUsage() *MemoryReply {
	if x, ok := x.GetData().(*ApostolisReply_MemoryUsage); ok {
		return x.MemoryUsage
	}
	return nil
}

func (x *ApostolisReply) GetCpuUsage() *CPUReply {
	if x, ok := x.GetData().(*ApostolisReply_CpuUsage); ok {
		return x.CpuUsage
	}
	return nil
}

func (x *ApostolisReply) GetGpuUsage() *GPUReply {
	if x, ok := x.GetData().(*ApostolisReply_GpuUsage); ok {
		return x.GpuUsage
	}
	return nil
}

func (x *ApostolisReply) GetDiskUsage() *DiskReply {
	if x, ok := x.GetData().(*ApostolisReply_DiskUsage); ok {
		return x.DiskUsage
	}
	return nil
}

func (x *ApostolisReply) GetLoadUsage() *LoadReply {
	if x, ok := x.GetData().(*ApostolisReply_LoadUsage); ok {
		return x.LoadUsage
	}
	return nil
}

func (x *ApostolisReply) GetNetUsage() *NetReply {
	if x, ok := x.GetData().(*ApostolisReply_NetUsage); ok {
		return x.NetUsage
	}
	return nil
}

func (x *ApostolisReply) GetAll() *AllUsageStats {
	if x, ok := x.GetData().(*ApostolisReply_All); ok {
		return x.All
	}
	return nil
}

type isApostolisReply_Data interface {
	isApostolisReply_Data()
}

type ApostolisReply_MemoryUsage struct {
	MemoryUsage *MemoryReply `protobuf:"bytes,3,opt,name=memory_usage,json=memoryUsage,proto3,oneof"`
}

type ApostolisReply_CpuUsage struct {
	CpuUsage *CPUReply `protobuf:"bytes,4,opt,name=cpu_usage,json=cpuUsage,proto3,oneof"`
}

type ApostolisReply_GpuUsage struct {
	GpuUsage *GPUReply `protobuf:"bytes,5,opt,name=gpu_usage,json=gpuUsage,proto3,oneof"`
}

type ApostolisReply_DiskUsage struct {
	DiskUsage *DiskReply `protobuf:"bytes,6,opt,name=disk_usage,json=diskUsage,proto3,oneof"`
}

type ApostolisReply_LoadUsage struct {
	LoadUsage *LoadReply `protobuf:"bytes,7,opt,name=load_usage,json=loadUsage,proto3,oneof"`
}

type ApostolisReply_NetUsage struct {
	NetUsage *NetReply `protobuf:"bytes,8,opt,name=net_usage,json=netUsage,proto3,oneof"`
}

type ApostolisReply_All struct {
	All *AllUsageStats `protobuf:"bytes,9,opt,name=all,proto3,oneof"`
}

func (*ApostolisReply_MemoryUsage) isApostolisReply_Data() {}

func (*ApostolisReply_CpuUsage) isApostolisReply_Data() {}

func (*ApostolisReply_GpuUsage) isApostolisReply_Data() {}

func (*ApostolisReply_DiskUsage) isApostolisReply_Data() {}

func (*ApostolisReply_LoadUsage) isApostolisReply_Data() {}

func (*ApostolisReply_NetUsage) isApostolisReply_Data() {}

func (*ApostolisReply_All) isApostolisReply_Data() {}

type DiskReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            []string `protobuf:"bytes,1,rep,name=name,proto3" json:"name,omitempty"`
	ReadsCompleted  []uint64 `protobuf:"varint,2,rep,packed,name=reads_completed,json=readsCompleted,proto3" json:"reads_completed,omitempty"`
	WritesCompleted []uint64 `protobuf:"varint,3,rep,packed,name=writes_completed,json=writesCompleted,proto3" json:"writes_completed,omitempty"`
}

func (x *DiskReply) Reset() {
	*x = DiskReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_models_protos_apostolis_apostolis_messages_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiskReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiskReply) ProtoMessage() {}

func (x *DiskReply) ProtoReflect() protoreflect.Message {
	mi := &file_src_models_protos_apostolis_apostolis_messages_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiskReply.ProtoReflect.Descriptor instead.
func (*DiskReply) Descriptor() ([]byte, []int) {
	return file_src_models_protos_apostolis_apostolis_messages_proto_rawDescGZIP(), []int{2}
}

func (x *DiskReply) GetName() []string {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *DiskReply) GetReadsCompleted() []uint64 {
	if x != nil {
		return x.ReadsCompleted
	}
	return nil
}

func (x *DiskReply) GetWritesCompleted() []uint64 {
	if x != nil {
		return x.WritesCompleted
	}
	return nil
}

type LoadReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Loadavg1  float64 `protobuf:"fixed64,1,opt,name=loadavg1,proto3" json:"loadavg1,omitempty"`
	Loadavg5  float64 `protobuf:"fixed64,2,opt,name=loadavg5,proto3" json:"loadavg5,omitempty"`
	Loadavg15 float64 `protobuf:"fixed64,3,opt,name=loadavg15,proto3" json:"loadavg15,omitempty"`
}

func (x *LoadReply) Reset() {
	*x = LoadReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_models_protos_apostolis_apostolis_messages_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadReply) ProtoMessage() {}

func (x *LoadReply) ProtoReflect() protoreflect.Message {
	mi := &file_src_models_protos_apostolis_apostolis_messages_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadReply.ProtoReflect.Descriptor instead.
func (*LoadReply) Descriptor() ([]byte, []int) {
	return file_src_models_protos_apostolis_apostolis_messages_proto_rawDescGZIP(), []int{3}
}

func (x *LoadReply) GetLoadavg1() float64 {
	if x != nil {
		return x.Loadavg1
	}
	return 0
}

func (x *LoadReply) GetLoadavg5() float64 {
	if x != nil {
		return x.Loadavg5
	}
	return 0
}

func (x *LoadReply) GetLoadavg15() float64 {
	if x != nil {
		return x.Loadavg15
	}
	return 0
}

type GPUReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceName []string  `protobuf:"bytes,1,rep,name=device_name,json=deviceName,proto3" json:"device_name,omitempty"`
	Temp       []float64 `protobuf:"fixed64,2,rep,packed,name=temp,proto3" json:"temp,omitempty"`
	Percent    float64   `protobuf:"fixed64,3,opt,name=percent,proto3" json:"percent,omitempty"`
	Used       float64   `protobuf:"fixed64,4,opt,name=used,proto3" json:"used,omitempty"`
	Total      float64   `protobuf:"fixed64,5,opt,name=total,proto3" json:"total,omitempty"`
	Power      []float64 `protobuf:"fixed64,6,rep,packed,name=power,proto3" json:"power,omitempty"`
}

func (x *GPUReply) Reset() {
	*x = GPUReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_models_protos_apostolis_apostolis_messages_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GPUReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GPUReply) ProtoMessage() {}

func (x *GPUReply) ProtoReflect() protoreflect.Message {
	mi := &file_src_models_protos_apostolis_apostolis_messages_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GPUReply.ProtoReflect.Descriptor instead.
func (*GPUReply) Descriptor() ([]byte, []int) {
	return file_src_models_protos_apostolis_apostolis_messages_proto_rawDescGZIP(), []int{4}
}

func (x *GPUReply) GetDeviceName() []string {
	if x != nil {
		return x.DeviceName
	}
	return nil
}

func (x *GPUReply) GetTemp() []float64 {
	if x != nil {
		return x.Temp
	}
	return nil
}

func (x *GPUReply) GetPercent() float64 {
	if x != nil {
		return x.Percent
	}
	return 0
}

func (x *GPUReply) GetUsed() float64 {
	if x != nil {
		return x.Used
	}
	return 0
}

func (x *GPUReply) GetTotal() float64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GPUReply) GetPower() []float64 {
	if x != nil {
		return x.Power
	}
	return nil
}

type NetReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    []string `protobuf:"bytes,1,rep,name=name,proto3" json:"name,omitempty"`
	RxBytes []uint64 `protobuf:"varint,2,rep,packed,name=rx_bytes,json=rxBytes,proto3" json:"rx_bytes,omitempty"`
	TxBytes []uint64 `protobuf:"varint,3,rep,packed,name=tx_bytes,json=txBytes,proto3" json:"tx_bytes,omitempty"`
}

func (x *NetReply) Reset() {
	*x = NetReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_models_protos_apostolis_apostolis_messages_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetReply) ProtoMessage() {}

func (x *NetReply) ProtoReflect() protoreflect.Message {
	mi := &file_src_models_protos_apostolis_apostolis_messages_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetReply.ProtoReflect.Descriptor instead.
func (*NetReply) Descriptor() ([]byte, []int) {
	return file_src_models_protos_apostolis_apostolis_messages_proto_rawDescGZIP(), []int{5}
}

func (x *NetReply) GetName() []string {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *NetReply) GetRxBytes() []uint64 {
	if x != nil {
		return x.RxBytes
	}
	return nil
}

func (x *NetReply) GetTxBytes() []uint64 {
	if x != nil {
		return x.TxBytes
	}
	return nil
}

type MemoryReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total     float64 `protobuf:"fixed64,1,opt,name=Total,proto3" json:"Total,omitempty"`
	Used      float64 `protobuf:"fixed64,2,opt,name=Used,proto3" json:"Used,omitempty"`
	Cached    float64 `protobuf:"fixed64,3,opt,name=Cached,proto3" json:"Cached,omitempty"`
	Free      float64 `protobuf:"fixed64,4,opt,name=Free,proto3" json:"Free,omitempty"`
	Active    float64 `protobuf:"fixed64,5,opt,name=Active,proto3" json:"Active,omitempty"`
	Inactive  float64 `protobuf:"fixed64,6,opt,name=Inactive,proto3" json:"Inactive,omitempty"`
	Available float64 `protobuf:"fixed64,7,opt,name=Available,proto3" json:"Available,omitempty"`
}

func (x *MemoryReply) Reset() {
	*x = MemoryReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_models_protos_apostolis_apostolis_messages_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemoryReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemoryReply) ProtoMessage() {}

func (x *MemoryReply) ProtoReflect() protoreflect.Message {
	mi := &file_src_models_protos_apostolis_apostolis_messages_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemoryReply.ProtoReflect.Descriptor instead.
func (*MemoryReply) Descriptor() ([]byte, []int) {
	return file_src_models_protos_apostolis_apostolis_messages_proto_rawDescGZIP(), []int{6}
}

func (x *MemoryReply) GetTotal() float64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *MemoryReply) GetUsed() float64 {
	if x != nil {
		return x.Used
	}
	return 0
}

func (x *MemoryReply) GetCached() float64 {
	if x != nil {
		return x.Cached
	}
	return 0
}

func (x *MemoryReply) GetFree() float64 {
	if x != nil {
		return x.Free
	}
	return 0
}

func (x *MemoryReply) GetActive() float64 {
	if x != nil {
		return x.Active
	}
	return 0
}

func (x *MemoryReply) GetInactive() float64 {
	if x != nil {
		return x.Inactive
	}
	return 0
}

func (x *MemoryReply) GetAvailable() float64 {
	if x != nil {
		return x.Available
	}
	return 0
}

type CPUReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total  float64   `protobuf:"fixed64,1,opt,name=total,proto3" json:"total,omitempty"`
	User   float64   `protobuf:"fixed64,2,opt,name=user,proto3" json:"user,omitempty"`
	System float64   `protobuf:"fixed64,3,opt,name=system,proto3" json:"system,omitempty"`
	Idle   float64   `protobuf:"fixed64,4,opt,name=idle,proto3" json:"idle,omitempty"`
	Temp   float64   `protobuf:"fixed64,5,opt,name=temp,proto3" json:"temp,omitempty"`
	Power  float64   `protobuf:"fixed64,6,opt,name=power,proto3" json:"power,omitempty"`
	Cpus   []float64 `protobuf:"fixed64,7,rep,packed,name=cpus,proto3" json:"cpus,omitempty"`
}

func (x *CPUReply) Reset() {
	*x = CPUReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_models_protos_apostolis_apostolis_messages_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPUReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPUReply) ProtoMessage() {}

func (x *CPUReply) ProtoReflect() protoreflect.Message {
	mi := &file_src_models_protos_apostolis_apostolis_messages_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPUReply.ProtoReflect.Descriptor instead.
func (*CPUReply) Descriptor() ([]byte, []int) {
	return file_src_models_protos_apostolis_apostolis_messages_proto_rawDescGZIP(), []int{7}
}

func (x *CPUReply) GetTotal() float64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *CPUReply) GetUser() float64 {
	if x != nil {
		return x.User
	}
	return 0
}

func (x *CPUReply) GetSystem() float64 {
	if x != nil {
		return x.System
	}
	return 0
}

func (x *CPUReply) GetIdle() float64 {
	if x != nil {
		return x.Idle
	}
	return 0
}

func (x *CPUReply) GetTemp() float64 {
	if x != nil {
		return x.Temp
	}
	return 0
}

func (x *CPUReply) GetPower() float64 {
	if x != nil {
		return x.Power
	}
	return 0
}

func (x *CPUReply) GetCpus() []float64 {
	if x != nil {
		return x.Cpus
	}
	return nil
}

type AllUsageStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemoryUsage *MemoryReply `protobuf:"bytes,1,opt,name=memory_usage,json=memoryUsage,proto3" json:"memory_usage,omitempty"`
	CpuUsage    *CPUReply    `protobuf:"bytes,2,opt,name=cpu_usage,json=cpuUsage,proto3" json:"cpu_usage,omitempty"`
	GpuUsage    *GPUReply    `protobuf:"bytes,3,opt,name=gpu_usage,json=gpuUsage,proto3" json:"gpu_usage,omitempty"`
	DiskUsage   *DiskReply   `protobuf:"bytes,4,opt,name=disk_usage,json=diskUsage,proto3" json:"disk_usage,omitempty"`
	LoadUsage   *LoadReply   `protobuf:"bytes,5,opt,name=load_usage,json=loadUsage,proto3" json:"load_usage,omitempty"`
	NetUsage    *NetReply    `protobuf:"bytes,6,opt,name=net_usage,json=netUsage,proto3" json:"net_usage,omitempty"`
}

func (x *AllUsageStats) Reset() {
	*x = AllUsageStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_models_protos_apostolis_apostolis_messages_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllUsageStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllUsageStats) ProtoMessage() {}

func (x *AllUsageStats) ProtoReflect() protoreflect.Message {
	mi := &file_src_models_protos_apostolis_apostolis_messages_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllUsageStats.ProtoReflect.Descriptor instead.
func (*AllUsageStats) Descriptor() ([]byte, []int) {
	return file_src_models_protos_apostolis_apostolis_messages_proto_rawDescGZIP(), []int{8}
}

func (x *AllUsageStats) GetMemoryUsage() *MemoryReply {
	if x != nil {
		return x.MemoryUsage
	}
	return nil
}

func (x *AllUsageStats) GetCpuUsage() *CPUReply {
	if x != nil {
		return x.CpuUsage
	}
	return nil
}

func (x *AllUsageStats) GetGpuUsage() *GPUReply {
	if x != nil {
		return x.GpuUsage
	}
	return nil
}

func (x *AllUsageStats) GetDiskUsage() *DiskReply {
	if x != nil {
		return x.DiskUsage
	}
	return nil
}

func (x *AllUsageStats) GetLoadUsage() *LoadReply {
	if x != nil {
		return x.LoadUsage
	}
	return nil
}

func (x *AllUsageStats) GetNetUsage() *NetReply {
	if x != nil {
		return x.NetUsage
	}
	return nil
}

var File_src_models_protos_apostolis_apostolis_messages_proto protoreflect.FileDescriptor

var file_src_models_protos_apostolis_apostolis_messages_proto_rawDesc = []byte{
	0x0a, 0x34, 0x73, 0x72, 0x63, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2f, 0x61, 0x70, 0x6f, 0x73, 0x74, 0x6f, 0x6c, 0x69, 0x73, 0x2f, 0x61, 0x70,
	0x6f, 0x73, 0x74, 0x6f, 0x6c, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x67, 0x61, 0x69, 0x61, 0x2e, 0x61, 0x70, 0x6f,
	0x73, 0x74, 0x6f, 0x6c, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x22, 0x45, 0x0a, 0x10, 0x41, 0x70,
	0x6f, 0x73, 0x74, 0x6f, 0x6c, 0x69, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31,
	0x0a, 0x06, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19,
	0x2e, 0x67, 0x61, 0x69, 0x61, 0x2e, 0x61, 0x70, 0x6f, 0x73, 0x74, 0x6f, 0x6c, 0x69, 0x73, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x22, 0xfe, 0x03, 0x0a, 0x0e, 0x41, 0x70, 0x6f, 0x73, 0x74, 0x6f, 0x6c, 0x69, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x44, 0x0a, 0x0c, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67,
	0x61, 0x69, 0x61, 0x2e, 0x61, 0x70, 0x6f, 0x73, 0x74, 0x6f, 0x6c, 0x69, 0x73, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x48, 0x00, 0x52,
	0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3b, 0x0a, 0x09,
	0x63, 0x70, 0x75, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x67, 0x61, 0x69, 0x61, 0x2e, 0x61, 0x70, 0x6f, 0x73, 0x74, 0x6f, 0x6c, 0x69, 0x73,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x50, 0x55, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x48, 0x00, 0x52,
	0x08, 0x63, 0x70, 0x75, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3b, 0x0a, 0x09, 0x67, 0x70, 0x75,
	0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67,
	0x61, 0x69, 0x61, 0x2e, 0x61, 0x70, 0x6f, 0x73, 0x74, 0x6f, 0x6c, 0x69, 0x73, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x47, 0x50, 0x55, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x48, 0x00, 0x52, 0x08, 0x67, 0x70,
	0x75, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3e, 0x0a, 0x0a, 0x64, 0x69, 0x73, 0x6b, 0x5f, 0x75,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x61, 0x69,
	0x61, 0x2e, 0x61, 0x70, 0x6f, 0x73, 0x74, 0x6f, 0x6c, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x44, 0x69, 0x73, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x48, 0x00, 0x52, 0x09, 0x64, 0x69, 0x73,
	0x6b, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3e, 0x0a, 0x0a, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x75,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x61, 0x69,
	0x61, 0x2e, 0x61, 0x70, 0x6f, 0x73, 0x74, 0x6f, 0x6c, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x4c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x48, 0x00, 0x52, 0x09, 0x6c, 0x6f, 0x61,
	0x64, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3b, 0x0a, 0x09, 0x6e, 0x65, 0x74, 0x5f, 0x75, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x61, 0x69, 0x61,
	0x2e, 0x61, 0x70, 0x6f, 0x73, 0x74, 0x6f, 0x6c, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4e,
	0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x48, 0x00, 0x52, 0x08, 0x6e, 0x65, 0x74, 0x55, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x35, 0x0a, 0x03, 0x61, 0x6c, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x67, 0x61, 0x69, 0x61, 0x2e, 0x61, 0x70, 0x6f, 0x73, 0x74, 0x6f, 0x6c, 0x69,
	0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x6c, 0x6c, 0x55, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x48, 0x00, 0x52, 0x03, 0x61, 0x6c, 0x6c, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x73, 0x0a, 0x09, 0x44, 0x69, 0x73, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x61, 0x64, 0x73, 0x5f, 0x63, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0e, 0x72, 0x65,
	0x61, 0x64, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x10,
	0x77, 0x72, 0x69, 0x74, 0x65, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0f, 0x77, 0x72, 0x69, 0x74, 0x65, 0x73, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0x61, 0x0a, 0x09, 0x4c, 0x6f, 0x61, 0x64, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x61, 0x64, 0x61, 0x76, 0x67, 0x31,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6c, 0x6f, 0x61, 0x64, 0x61, 0x76, 0x67, 0x31,
	0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x61, 0x64, 0x61, 0x76, 0x67, 0x35, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x08, 0x6c, 0x6f, 0x61, 0x64, 0x61, 0x76, 0x67, 0x35, 0x12, 0x1c, 0x0a, 0x09,
	0x6c, 0x6f, 0x61, 0x64, 0x61, 0x76, 0x67, 0x31, 0x35, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x09, 0x6c, 0x6f, 0x61, 0x64, 0x61, 0x76, 0x67, 0x31, 0x35, 0x22, 0x99, 0x01, 0x0a, 0x08, 0x47,
	0x50, 0x55, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x6d, 0x70,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x01, 0x52, 0x04, 0x74, 0x65, 0x6d, 0x70, 0x12, 0x18, 0x0a, 0x07,
	0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x70,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x75, 0x73, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x06, 0x20, 0x03, 0x28, 0x01, 0x52,
	0x05, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x22, 0x54, 0x0a, 0x08, 0x4e, 0x65, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x78, 0x5f, 0x62, 0x79, 0x74,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07, 0x72, 0x78, 0x42, 0x79, 0x74, 0x65,
	0x73, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x78, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x04, 0x52, 0x07, 0x74, 0x78, 0x42, 0x79, 0x74, 0x65, 0x73, 0x22, 0xb5, 0x01, 0x0a,
	0x0b, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x04, 0x55, 0x73, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x61, 0x63, 0x68, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x43, 0x61, 0x63, 0x68, 0x65, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x46, 0x72, 0x65, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x46, 0x72,
	0x65, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x06, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x6e,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x49, 0x6e,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x41, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x22, 0x9e, 0x01, 0x0a, 0x08, 0x43, 0x50, 0x55, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x64, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x04, 0x69, 0x64, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x6d, 0x70, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x74, 0x65, 0x6d, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x6f, 0x77, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x6f, 0x77, 0x65,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x70, 0x75, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x01, 0x52,
	0x04, 0x63, 0x70, 0x75, 0x73, 0x22, 0x80, 0x03, 0x0a, 0x0d, 0x41, 0x6c, 0x6c, 0x55, 0x73, 0x61,
	0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x42, 0x0a, 0x0c, 0x6d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x67, 0x61, 0x69, 0x61, 0x2e, 0x61, 0x70, 0x6f, 0x73, 0x74, 0x6f, 0x6c, 0x69, 0x73, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x0b,
	0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x09, 0x63,
	0x70, 0x75, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x61, 0x69, 0x61, 0x2e, 0x61, 0x70, 0x6f, 0x73, 0x74, 0x6f, 0x6c, 0x69, 0x73, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x43, 0x50, 0x55, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x08, 0x63, 0x70,
	0x75, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x09, 0x67, 0x70, 0x75, 0x5f, 0x75, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x61, 0x69, 0x61,
	0x2e, 0x61, 0x70, 0x6f, 0x73, 0x74, 0x6f, 0x6c, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47,
	0x50, 0x55, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x08, 0x67, 0x70, 0x75, 0x55, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x3c, 0x0a, 0x0a, 0x64, 0x69, 0x73, 0x6b, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x61, 0x69, 0x61, 0x2e, 0x61, 0x70, 0x6f,
	0x73, 0x74, 0x6f, 0x6c, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x69, 0x73, 0x6b, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x52, 0x09, 0x64, 0x69, 0x73, 0x6b, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x3c, 0x0a, 0x0a, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x61, 0x69, 0x61, 0x2e, 0x61, 0x70, 0x6f, 0x73, 0x74,
	0x6f, 0x6c, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x52, 0x09, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a,
	0x09, 0x6e, 0x65, 0x74, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x61, 0x69, 0x61, 0x2e, 0x61, 0x70, 0x6f, 0x73, 0x74, 0x6f, 0x6c, 0x69,
	0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4e, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x08,
	0x6e, 0x65, 0x74, 0x55, 0x73, 0x61, 0x67, 0x65, 0x2a, 0x4e, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x6c, 0x6c, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x50, 0x55, 0x10, 0x02, 0x12,
	0x07, 0x0a, 0x03, 0x47, 0x50, 0x55, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x69, 0x73, 0x6b,
	0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x4c, 0x6f, 0x61, 0x64, 0x41, 0x76, 0x67, 0x10, 0x05, 0x12,
	0x07, 0x0a, 0x03, 0x4e, 0x65, 0x74, 0x10, 0x06, 0x42, 0x1d, 0x5a, 0x1b, 0x73, 0x72, 0x63, 0x2f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x61, 0x70,
	0x6f, 0x73, 0x74, 0x6f, 0x6c, 0x69, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_src_models_protos_apostolis_apostolis_messages_proto_rawDescOnce sync.Once
	file_src_models_protos_apostolis_apostolis_messages_proto_rawDescData = file_src_models_protos_apostolis_apostolis_messages_proto_rawDesc
)

func file_src_models_protos_apostolis_apostolis_messages_proto_rawDescGZIP() []byte {
	file_src_models_protos_apostolis_apostolis_messages_proto_rawDescOnce.Do(func() {
		file_src_models_protos_apostolis_apostolis_messages_proto_rawDescData = protoimpl.X.CompressGZIP(file_src_models_protos_apostolis_apostolis_messages_proto_rawDescData)
	})
	return file_src_models_protos_apostolis_apostolis_messages_proto_rawDescData
}

var file_src_models_protos_apostolis_apostolis_messages_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_src_models_protos_apostolis_apostolis_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_src_models_protos_apostolis_apostolis_messages_proto_goTypes = []interface{}{
	(Stats)(0),               // 0: gaia.apostolis.api.Stats
	(*ApostolisRequest)(nil), // 1: gaia.apostolis.api.ApostolisRequest
	(*ApostolisReply)(nil),   // 2: gaia.apostolis.api.ApostolisReply
	(*DiskReply)(nil),        // 3: gaia.apostolis.api.DiskReply
	(*LoadReply)(nil),        // 4: gaia.apostolis.api.LoadReply
	(*GPUReply)(nil),         // 5: gaia.apostolis.api.GPUReply
	(*NetReply)(nil),         // 6: gaia.apostolis.api.NetReply
	(*MemoryReply)(nil),      // 7: gaia.apostolis.api.MemoryReply
	(*CPUReply)(nil),         // 8: gaia.apostolis.api.CPUReply
	(*AllUsageStats)(nil),    // 9: gaia.apostolis.api.AllUsageStats
}
var file_src_models_protos_apostolis_apostolis_messages_proto_depIdxs = []int32{
	0,  // 0: gaia.apostolis.api.ApostolisRequest.metric:type_name -> gaia.apostolis.api.Stats
	7,  // 1: gaia.apostolis.api.ApostolisReply.memory_usage:type_name -> gaia.apostolis.api.MemoryReply
	8,  // 2: gaia.apostolis.api.ApostolisReply.cpu_usage:type_name -> gaia.apostolis.api.CPUReply
	5,  // 3: gaia.apostolis.api.ApostolisReply.gpu_usage:type_name -> gaia.apostolis.api.GPUReply
	3,  // 4: gaia.apostolis.api.ApostolisReply.disk_usage:type_name -> gaia.apostolis.api.DiskReply
	4,  // 5: gaia.apostolis.api.ApostolisReply.load_usage:type_name -> gaia.apostolis.api.LoadReply
	6,  // 6: gaia.apostolis.api.ApostolisReply.net_usage:type_name -> gaia.apostolis.api.NetReply
	9,  // 7: gaia.apostolis.api.ApostolisReply.all:type_name -> gaia.apostolis.api.AllUsageStats
	7,  // 8: gaia.apostolis.api.AllUsageStats.memory_usage:type_name -> gaia.apostolis.api.MemoryReply
	8,  // 9: gaia.apostolis.api.AllUsageStats.cpu_usage:type_name -> gaia.apostolis.api.CPUReply
	5,  // 10: gaia.apostolis.api.AllUsageStats.gpu_usage:type_name -> gaia.apostolis.api.GPUReply
	3,  // 11: gaia.apostolis.api.AllUsageStats.disk_usage:type_name -> gaia.apostolis.api.DiskReply
	4,  // 12: gaia.apostolis.api.AllUsageStats.load_usage:type_name -> gaia.apostolis.api.LoadReply
	6,  // 13: gaia.apostolis.api.AllUsageStats.net_usage:type_name -> gaia.apostolis.api.NetReply
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_src_models_protos_apostolis_apostolis_messages_proto_init() }
func file_src_models_protos_apostolis_apostolis_messages_proto_init() {
	if File_src_models_protos_apostolis_apostolis_messages_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_src_models_protos_apostolis_apostolis_messages_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApostolisRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_models_protos_apostolis_apostolis_messages_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApostolisReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_models_protos_apostolis_apostolis_messages_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiskReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_models_protos_apostolis_apostolis_messages_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_models_protos_apostolis_apostolis_messages_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GPUReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_models_protos_apostolis_apostolis_messages_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_models_protos_apostolis_apostolis_messages_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemoryReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_models_protos_apostolis_apostolis_messages_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CPUReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_models_protos_apostolis_apostolis_messages_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllUsageStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_src_models_protos_apostolis_apostolis_messages_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*ApostolisReply_MemoryUsage)(nil),
		(*ApostolisReply_CpuUsage)(nil),
		(*ApostolisReply_GpuUsage)(nil),
		(*ApostolisReply_DiskUsage)(nil),
		(*ApostolisReply_LoadUsage)(nil),
		(*ApostolisReply_NetUsage)(nil),
		(*ApostolisReply_All)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_src_models_protos_apostolis_apostolis_messages_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_src_models_protos_apostolis_apostolis_messages_proto_goTypes,
		DependencyIndexes: file_src_models_protos_apostolis_apostolis_messages_proto_depIdxs,
		EnumInfos:         file_src_models_protos_apostolis_apostolis_messages_proto_enumTypes,
		MessageInfos:      file_src_models_protos_apostolis_apostolis_messages_proto_msgTypes,
	}.Build()
	File_src_models_protos_apostolis_apostolis_messages_proto = out.File
	file_src_models_protos_apostolis_apostolis_messages_proto_rawDesc = nil
	file_src_models_protos_apostolis_apostolis_messages_proto_goTypes = nil
	file_src_models_protos_apostolis_apostolis_messages_proto_depIdxs = nil
}
